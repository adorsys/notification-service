---
version: '3'
services:
  app1:
    build: .
    image: notification-service:latest
    container_name: app1
    working_dir: /var/app
    user: root
    ports:
      - 3001:3000
    volumes:
      - ./:/var/app
    networks:
      - adorsys
    command: ["npm", "run", "first-start"]
    env_file:
      - .env

  app-testing:
    depends_on:
      - redis
      - app
    image: notification-service:latest
    networks:
      - adorsys
    command: ["npm", "run", "start"]

  app2:
    build: .
    image: notification-service:latest
    container_name: app2
    working_dir: /var/app
    user: root
    ports:
      - 3002:3000
    volumes:
      - ./:/var/app
    networks:
      - adorsys
    command: ["npm", "run", "first-start"]
    env_file:
      - .env

  redis:
    image: redis:5.0.6
    container_name: cache
    command: ["redis-server"]
    env_file:
      - .env
    ports:
      - 6379:6379
    networks:
      - adorsys

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - '9090:9090'
    networks:
      - adorsys

  node-exporter:
    image: prom/node-exporter:latest
    ports:
      - '9100:9100'
    networks:
      - adorsys

  redis_exporter:
    image: oliver006/redis_exporter:latest
    environment:
      - REDIS_ADDR=redis://cache
    ports:
      - '9121:9121'
    networks:
      - adorsys

  grafana:
    image: grafana/grafana:latest
    volumes:
      - ./docker/grafana/dashboards:/var/lib/grafana/dashboards
      - ./docker/grafana/provisioning/dashboards/all.yml:/etc/grafana/provisioning/dashboards/all.yml
      - ./docker/grafana/provisioning/datasources/all.yml:/etc/grafana/provisioning/datasources/all.yml
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=password123
    depends_on:
      - prometheus
    ports:
      - '3000:3000'
    networks:
      - adorsys

networks:
  adorsys:
    driver: bridge
